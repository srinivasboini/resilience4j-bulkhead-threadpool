spring:
  application.name: resilience4j-bulkhead-threadpool
  jackson.serialization.indent_output: true

server:
  port: 8080

#management.endpoints.web.exposure.include: '*'
#management.endpoint.health.show-details: always

#management.health.diskspace.enabled: false
#management.health.circuitbreakers.enabled: true
#management.health.ratelimiters.enabled: false

info:
  name: ${spring.application.name}
  description: resilience4j bulkhead thread pool demo
  environment: ${spring.profiles.active}
  version: 0.0.1

#management.metrics.tags.application: ${spring.application.name}
#management.metrics.distribution.percentiles-histogram.http.server.requests: true
#management.metrics.distribution.percentiles-histogram.resilience4j.circuitbreaker.calls: true

resilience4j.thread-pool-bulkhead:
  configs:
    default:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 2
      queueCapacity: 2
  instances:
    serviceA:
      baseConfig: default


management:
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
        resilience4j:
          circuitbreaker:
            calls: true
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  health:
    diskspace:
      enabled: true



    circuitbreakers:
      enabled: true


    ratelimiters:
      enabled: false